"use strict";
var language_manager_1 = require("../localization/language-manager");
var validator_options_1 = require("../validator-options");
var PropertyValidator = (function () {
    function PropertyValidator(errorMessage) {
        this.errorMessage = errorMessage;
    }
    PropertyValidator.prototype.getErrorMessage = function (context) {
        if (this.errorMessage != null && this.errorMessage.length > 0) {
            return this.errorMessage;
        }
        if (this.errorMessageResourceName != null && this.errorMessageResourceName.length > 0) {
            return language_manager_1.LanguageManager.getLocalizedMessage(this.errorMessageResourceName, validator_options_1.ValidatorOptions.language, this.getFormatParameters(context.propertyDisplayName));
        }
        return language_manager_1.LanguageManager.getLocalizedMessage("invalidField", validator_options_1.ValidatorOptions.language, {
            name: context.propertyDisplayName
        });
    };
    PropertyValidator.prototype.getFormatParameters = function (propertyName) {
        var _this = this;
        var params = {
            name: propertyName
        };
        Object.getOwnPropertyNames(this).forEach(function (propertyName) {
            if (propertyName != "errorMessage" && propertyName != "errorMessageResourceName") {
                params[propertyName] = _this[propertyName];
            }
        });
        return params;
    };
    return PropertyValidator;
}());
exports.PropertyValidator = PropertyValidator;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy92YWxpZGF0b3JzL3Byb3BlcnR5LXZhbGlkYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsaUNBQWdDLGtDQUFrQyxDQUFDLENBQUE7QUFDbkUsa0NBQWlDLHNCQUFzQixDQUFDLENBQUE7QUFFeEQ7SUFJSSwyQkFBWSxZQUFxQjtRQUM3QixJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztJQUNyQyxDQUFDO0lBRU0sMkNBQWUsR0FBdEIsVUFBdUIsT0FBMEI7UUFDN0MsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1RCxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUM3QixDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLHdCQUF3QixJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsd0JBQXdCLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDcEYsTUFBTSxDQUFDLGtDQUFlLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLHdCQUF3QixFQUFFLG9DQUFnQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztRQUNoSyxDQUFDO1FBRUQsTUFBTSxDQUFDLGtDQUFlLENBQUMsbUJBQW1CLENBQUMsY0FBYyxFQUFFLG9DQUFnQixDQUFDLFFBQVEsRUFBRTtZQUNsRixJQUFJLEVBQUUsT0FBTyxDQUFDLG1CQUFtQjtTQUNwQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU8sK0NBQW1CLEdBQTNCLFVBQTRCLFlBQW9CO1FBQWhELGlCQVlDO1FBWEcsSUFBSSxNQUFNLEdBQStCO1lBQ3JDLElBQUksRUFBRSxZQUFZO1NBQ3JCLENBQUM7UUFFRixNQUFNLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUMsWUFBWTtZQUNsRCxFQUFFLENBQUMsQ0FBQyxZQUFZLElBQUksY0FBYyxJQUFJLFlBQVksSUFBSSwwQkFBMEIsQ0FBQyxDQUFDLENBQUM7Z0JBQy9FLE1BQU0sQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDOUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBR0wsd0JBQUM7QUFBRCxDQXJDQSxBQXFDQyxJQUFBO0FBckNxQix5QkFBaUIsb0JBcUN0QyxDQUFBIiwiZmlsZSI6InNyYy92YWxpZGF0b3JzL3Byb3BlcnR5LXZhbGlkYXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZhbGlkYXRpb25Db250ZXh0IH0gZnJvbSBcIi4uL3ZhbGlkYXRpb24tY29udGV4dFwiO1xyXG5pbXBvcnQgeyBMYW5ndWFnZU1hbmFnZXIgfSBmcm9tIFwiLi4vbG9jYWxpemF0aW9uL2xhbmd1YWdlLW1hbmFnZXJcIjtcclxuaW1wb3J0IHsgVmFsaWRhdG9yT3B0aW9ucyB9IGZyb20gXCIuLi92YWxpZGF0b3Itb3B0aW9uc1wiO1xyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFByb3BlcnR5VmFsaWRhdG9yIHtcclxuICAgIHB1YmxpYyBlcnJvck1lc3NhZ2U6IHN0cmluZztcclxuICAgIHB1YmxpYyBlcnJvck1lc3NhZ2VSZXNvdXJjZU5hbWU6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihlcnJvck1lc3NhZ2U/OiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IGVycm9yTWVzc2FnZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0RXJyb3JNZXNzYWdlKGNvbnRleHQ6IFZhbGlkYXRpb25Db250ZXh0KTogc3RyaW5nIHtcclxuICAgICAgICBpZiAodGhpcy5lcnJvck1lc3NhZ2UgIT0gbnVsbCAmJiB0aGlzLmVycm9yTWVzc2FnZS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVycm9yTWVzc2FnZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmVycm9yTWVzc2FnZVJlc291cmNlTmFtZSAhPSBudWxsICYmIHRoaXMuZXJyb3JNZXNzYWdlUmVzb3VyY2VOYW1lLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIExhbmd1YWdlTWFuYWdlci5nZXRMb2NhbGl6ZWRNZXNzYWdlKHRoaXMuZXJyb3JNZXNzYWdlUmVzb3VyY2VOYW1lLCBWYWxpZGF0b3JPcHRpb25zLmxhbmd1YWdlLCB0aGlzLmdldEZvcm1hdFBhcmFtZXRlcnMoY29udGV4dC5wcm9wZXJ0eURpc3BsYXlOYW1lKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gTGFuZ3VhZ2VNYW5hZ2VyLmdldExvY2FsaXplZE1lc3NhZ2UoXCJpbnZhbGlkRmllbGRcIiwgVmFsaWRhdG9yT3B0aW9ucy5sYW5ndWFnZSwge1xyXG4gICAgICAgICAgICBuYW1lOiBjb250ZXh0LnByb3BlcnR5RGlzcGxheU5hbWVcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldEZvcm1hdFBhcmFtZXRlcnMocHJvcGVydHlOYW1lOiBzdHJpbmcpOiB7IFtwYXJhbWV0ZXJOYW1lOiBzdHJpbmddOiBzdHJpbmcgfSB7XHJcbiAgICAgICAgdmFyIHBhcmFtczogeyBbbmFtZTogc3RyaW5nXTogc3RyaW5nIH0gPSB7XHJcbiAgICAgICAgICAgIG5hbWU6IHByb3BlcnR5TmFtZVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpLmZvckVhY2goKHByb3BlcnR5TmFtZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAocHJvcGVydHlOYW1lICE9IFwiZXJyb3JNZXNzYWdlXCIgJiYgcHJvcGVydHlOYW1lICE9IFwiZXJyb3JNZXNzYWdlUmVzb3VyY2VOYW1lXCIpIHtcclxuICAgICAgICAgICAgICAgIHBhcmFtc1twcm9wZXJ0eU5hbWVdID0gdGhpc1twcm9wZXJ0eU5hbWVdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBwYXJhbXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFic3RyYWN0IGlzVmFsaWQoY29udGV4dDogVmFsaWRhdGlvbkNvbnRleHQpOiBib29sZWFuO1xyXG59Il19
